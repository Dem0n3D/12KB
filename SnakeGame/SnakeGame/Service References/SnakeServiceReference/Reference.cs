//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34014
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SnakeGame.SnakeServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Snake", Namespace="http://schemas.datacontract.org/2004/07/SnakeServer")]
    [System.SerializableAttribute()]
    public partial class Snake : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SnakeGame.SnakeServiceReference.Error errorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SnakeGame.SnakeServiceReference.Setting settingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SnakeGame.SnakeServiceReference.Circle[] snakeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SnakeGame.SnakeServiceReference.Error error {
            get {
                return this.errorField;
            }
            set {
                if ((this.errorField.Equals(value) != true)) {
                    this.errorField = value;
                    this.RaisePropertyChanged("error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SnakeGame.SnakeServiceReference.Setting setting {
            get {
                return this.settingField;
            }
            set {
                if ((object.ReferenceEquals(this.settingField, value) != true)) {
                    this.settingField = value;
                    this.RaisePropertyChanged("setting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SnakeGame.SnakeServiceReference.Circle[] snake {
            get {
                return this.snakeField;
            }
            set {
                if ((object.ReferenceEquals(this.snakeField, value) != true)) {
                    this.snakeField = value;
                    this.RaisePropertyChanged("snake");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Setting", Namespace="http://schemas.datacontract.org/2004/07/SnakeServer")]
    [System.SerializableAttribute()]
    public partial class Setting : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SnakeGame.SnakeServiceReference.Direction directionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int heightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int powe_upsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int widthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SnakeGame.SnakeServiceReference.Direction direction {
            get {
                return this.directionField;
            }
            set {
                if ((this.directionField.Equals(value) != true)) {
                    this.directionField = value;
                    this.RaisePropertyChanged("direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int height {
            get {
                return this.heightField;
            }
            set {
                if ((this.heightField.Equals(value) != true)) {
                    this.heightField = value;
                    this.RaisePropertyChanged("height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int powe_ups {
            get {
                return this.powe_upsField;
            }
            set {
                if ((this.powe_upsField.Equals(value) != true)) {
                    this.powe_upsField = value;
                    this.RaisePropertyChanged("powe_ups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int width {
            get {
                return this.widthField;
            }
            set {
                if ((this.widthField.Equals(value) != true)) {
                    this.widthField = value;
                    this.RaisePropertyChanged("width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Error", Namespace="http://schemas.datacontract.org/2004/07/SnakeServer")]
    public enum Error : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClashWithThBody = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        No = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Circle", Namespace="http://schemas.datacontract.org/2004/07/SnakeServer")]
    [System.SerializableAttribute()]
    public partial class Circle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int xField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int yField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Direction", Namespace="http://schemas.datacontract.org/2004/07/SnakeServer")]
    public enum Direction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UP = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOWN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LEFT = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RIGHT = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Field", Namespace="http://schemas.datacontract.org/2004/07/SnakeServer")]
    [System.SerializableAttribute()]
    public partial class Field : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SnakeGame.SnakeServiceReference.Circle bonusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int heightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int widhtField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SnakeGame.SnakeServiceReference.Circle bonus {
            get {
                return this.bonusField;
            }
            set {
                if ((object.ReferenceEquals(this.bonusField, value) != true)) {
                    this.bonusField = value;
                    this.RaisePropertyChanged("bonus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int height {
            get {
                return this.heightField;
            }
            set {
                if ((this.heightField.Equals(value) != true)) {
                    this.heightField = value;
                    this.RaisePropertyChanged("height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int widht {
            get {
                return this.widhtField;
            }
            set {
                if ((this.widhtField.Equals(value) != true)) {
                    this.widhtField = value;
                    this.RaisePropertyChanged("widht");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SnakeServiceReference.ISnakeServer")]
    public interface ISnakeServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnakeServer/DoWork", ReplyAction="http://tempuri.org/ISnakeServer/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnakeServer/DoWork", ReplyAction="http://tempuri.org/ISnakeServer/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnakeServer/Start", ReplyAction="http://tempuri.org/ISnakeServer/StartResponse")]
        SnakeGame.SnakeServiceReference.StartResponse Start(SnakeGame.SnakeServiceReference.StartRequest request);
        
        // CODEGEN: Идет формирование контракта на сообщение, так как операция может иметь много возвращаемых значений.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnakeServer/Start", ReplyAction="http://tempuri.org/ISnakeServer/StartResponse")]
        System.Threading.Tasks.Task<SnakeGame.SnakeServiceReference.StartResponse> StartAsync(SnakeGame.SnakeServiceReference.StartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnakeServer/Motion", ReplyAction="http://tempuri.org/ISnakeServer/MotionResponse")]
        SnakeGame.SnakeServiceReference.MotionResponse Motion(SnakeGame.SnakeServiceReference.MotionRequest request);
        
        // CODEGEN: Идет формирование контракта на сообщение, так как операция может иметь много возвращаемых значений.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnakeServer/Motion", ReplyAction="http://tempuri.org/ISnakeServer/MotionResponse")]
        System.Threading.Tasks.Task<SnakeGame.SnakeServiceReference.MotionResponse> MotionAsync(SnakeGame.SnakeServiceReference.MotionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnakeServer/AddBonus", ReplyAction="http://tempuri.org/ISnakeServer/AddBonusResponse")]
        SnakeGame.SnakeServiceReference.AddBonusResponse AddBonus(SnakeGame.SnakeServiceReference.AddBonusRequest request);
        
        // CODEGEN: Идет формирование контракта на сообщение, так как операция может иметь много возвращаемых значений.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnakeServer/AddBonus", ReplyAction="http://tempuri.org/ISnakeServer/AddBonusResponse")]
        System.Threading.Tasks.Task<SnakeGame.SnakeServiceReference.AddBonusResponse> AddBonusAsync(SnakeGame.SnakeServiceReference.AddBonusRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Start", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public SnakeGame.SnakeServiceReference.Snake snake;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public SnakeGame.SnakeServiceReference.Field field;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int height;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int widht;
        
        public StartRequest() {
        }
        
        public StartRequest(SnakeGame.SnakeServiceReference.Snake snake, SnakeGame.SnakeServiceReference.Field field, int height, int widht) {
            this.snake = snake;
            this.field = field;
            this.height = height;
            this.widht = widht;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public SnakeGame.SnakeServiceReference.Snake snake;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public SnakeGame.SnakeServiceReference.Field field;
        
        public StartResponse() {
        }
        
        public StartResponse(SnakeGame.SnakeServiceReference.Snake snake, SnakeGame.SnakeServiceReference.Field field) {
            this.snake = snake;
            this.field = field;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Motion", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class MotionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public SnakeGame.SnakeServiceReference.Snake snake;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public SnakeGame.SnakeServiceReference.Field field;
        
        public MotionRequest() {
        }
        
        public MotionRequest(SnakeGame.SnakeServiceReference.Snake snake, SnakeGame.SnakeServiceReference.Field field) {
            this.snake = snake;
            this.field = field;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MotionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class MotionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public SnakeGame.SnakeServiceReference.Snake snake;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public SnakeGame.SnakeServiceReference.Field field;
        
        public MotionResponse() {
        }
        
        public MotionResponse(SnakeGame.SnakeServiceReference.Snake snake, SnakeGame.SnakeServiceReference.Field field) {
            this.snake = snake;
            this.field = field;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddBonus", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddBonusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public SnakeGame.SnakeServiceReference.Snake snake;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public SnakeGame.SnakeServiceReference.Field field;
        
        public AddBonusRequest() {
        }
        
        public AddBonusRequest(SnakeGame.SnakeServiceReference.Snake snake, SnakeGame.SnakeServiceReference.Field field) {
            this.snake = snake;
            this.field = field;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddBonusResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddBonusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public SnakeGame.SnakeServiceReference.Snake snake;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public SnakeGame.SnakeServiceReference.Field field;
        
        public AddBonusResponse() {
        }
        
        public AddBonusResponse(SnakeGame.SnakeServiceReference.Snake snake, SnakeGame.SnakeServiceReference.Field field) {
            this.snake = snake;
            this.field = field;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISnakeServerChannel : SnakeGame.SnakeServiceReference.ISnakeServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SnakeServerClient : System.ServiceModel.ClientBase<SnakeGame.SnakeServiceReference.ISnakeServer>, SnakeGame.SnakeServiceReference.ISnakeServer {
        
        public SnakeServerClient() {
        }
        
        public SnakeServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SnakeServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SnakeServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SnakeServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SnakeGame.SnakeServiceReference.StartResponse SnakeGame.SnakeServiceReference.ISnakeServer.Start(SnakeGame.SnakeServiceReference.StartRequest request) {
            return base.Channel.Start(request);
        }
        
        public void Start(ref SnakeGame.SnakeServiceReference.Snake snake, ref SnakeGame.SnakeServiceReference.Field field, int height, int widht) {
            SnakeGame.SnakeServiceReference.StartRequest inValue = new SnakeGame.SnakeServiceReference.StartRequest();
            inValue.snake = snake;
            inValue.field = field;
            inValue.height = height;
            inValue.widht = widht;
            SnakeGame.SnakeServiceReference.StartResponse retVal = ((SnakeGame.SnakeServiceReference.ISnakeServer)(this)).Start(inValue);
            snake = retVal.snake;
            field = retVal.field;
        }
        
        public System.Threading.Tasks.Task<SnakeGame.SnakeServiceReference.StartResponse> StartAsync(SnakeGame.SnakeServiceReference.StartRequest request) {
            return base.Channel.StartAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SnakeGame.SnakeServiceReference.MotionResponse SnakeGame.SnakeServiceReference.ISnakeServer.Motion(SnakeGame.SnakeServiceReference.MotionRequest request) {
            return base.Channel.Motion(request);
        }
        
        public void Motion(ref SnakeGame.SnakeServiceReference.Snake snake, ref SnakeGame.SnakeServiceReference.Field field) {
            SnakeGame.SnakeServiceReference.MotionRequest inValue = new SnakeGame.SnakeServiceReference.MotionRequest();
            inValue.snake = snake;
            inValue.field = field;
            SnakeGame.SnakeServiceReference.MotionResponse retVal = ((SnakeGame.SnakeServiceReference.ISnakeServer)(this)).Motion(inValue);
            snake = retVal.snake;
            field = retVal.field;
        }
        
        public System.Threading.Tasks.Task<SnakeGame.SnakeServiceReference.MotionResponse> MotionAsync(SnakeGame.SnakeServiceReference.MotionRequest request) {
            return base.Channel.MotionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SnakeGame.SnakeServiceReference.AddBonusResponse SnakeGame.SnakeServiceReference.ISnakeServer.AddBonus(SnakeGame.SnakeServiceReference.AddBonusRequest request) {
            return base.Channel.AddBonus(request);
        }
        
        public void AddBonus(ref SnakeGame.SnakeServiceReference.Snake snake, ref SnakeGame.SnakeServiceReference.Field field) {
            SnakeGame.SnakeServiceReference.AddBonusRequest inValue = new SnakeGame.SnakeServiceReference.AddBonusRequest();
            inValue.snake = snake;
            inValue.field = field;
            SnakeGame.SnakeServiceReference.AddBonusResponse retVal = ((SnakeGame.SnakeServiceReference.ISnakeServer)(this)).AddBonus(inValue);
            snake = retVal.snake;
            field = retVal.field;
        }
        
        public System.Threading.Tasks.Task<SnakeGame.SnakeServiceReference.AddBonusResponse> AddBonusAsync(SnakeGame.SnakeServiceReference.AddBonusRequest request) {
            return base.Channel.AddBonusAsync(request);
        }
    }
}
